#!/usr/bin/env python

import wx
import os
import sys
import pdb

title = "Presentor"

try:
    basedir = sys.argv[1]
except IndexError:
    basedir = os.getcwd()
    print "No basedir specified, using current directory.."

try:
    os.chdir(basedir)
except OSError:
    print "No such file or directory"
    sys.exit(1)

basedir = os.getcwd()

pictures = []
files = os.listdir(basedir)
for file in files:
    try:
        if (file[-4:].lower() == ".jpg") or (file[-5:].lower() == ".jpeg"):
            pictures.append(file)
    except IndexError:
        pass

pictures.sort()
print "\n".join(pictures)

class PresentationScreen(wx.Frame):
    def __init__(self):
        style = wx.NO_BORDER | wx.STAY_ON_TOP
        wx.Frame.__init__(self, None, wx.ID_ANY, title, style = style)
        self.box = wx.BoxSizer(wx.VERTICAL)
        self.SetBackgroundColour(wx.Colour(0,0,0))
        self.static_bitmap = wx.StaticBitmap(self, wx.ID_ANY)
        self.Bind(wx.EVT_KEY_DOWN, self.OnKeyPress)
        self.static_bitmap.Bind(wx.EVT_KEY_DOWN, self.OnKeyPress)
    def load(self, filename):
        self.filename = filename
        try:
            self.f = open(self.filename, "rb")
            self.image = wx.ImageFromStream(self.f)
            self.bitmap = wx.BitmapFromImage(self.image)
            self.static_bitmap.SetBitmap(self.bitmap)
            self.f.close()
        except:
            print "Cant load image"
        self.box.Add(self.static_bitmap, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.SHAPED)
        self.SetSizerAndFit(self.box)
    def display(self):
        self.Show()
    def Maximize(self):
        self.ShowFullScreen(True)
        self.Layout()
    def OnKeyPress(self, event):
        pdb.set_trace()
        event.Skip()
        key = event.GetKeyCode()
        if key == wx.WXK_ESCAPE:
            self.Maximize()

class PresentorsScreen(wx.Frame):
    def __init__(self):
        style = wx.NO_BORDER | wx.STAY_ON_TOP
        wx.Frame.__init__(self, None, wx.ID_ANY, title, style = style)

class MyApp(wx.App):
    def OnInit(self):
        Beamer = PresentationScreen()
        Beamer.load("test.jpeg")
        Beamer.display()
        return True


if __name__ == "__main__":
    app = MyApp()
    app.MainLoop()

# vim:nnoremap <silent> <F5> :!./p      resentation: #
